version: '3.3'

services:
  bot:
    image: "${BOT_IMAGE_NAME}"
    container_name: "${BOT_CONTAINER_NAME}"
    stop_signal: SIGINT
    ports:
      - "8080:8080"
    build:
      context: .
    working_dir: "/usr/src/app/${BOT_NAME}"
    volumes:
      - .:/usr/src/app/${BOT_NAME}
    command: sh -c "alembic upgrade head && python3 __main__.py"
    restart: always
    env_file:
      - ".env"
    networks:
      - tg_bot

    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  redis_cache:
    image: redis:6.2-alpine
    restart: always
    command: redis-server --port $REDIS__PORT --save 20 1 --loglevel warning
    env_file:
      - ".env"
    volumes:
      - cache:/data
    networks:
      - tg_bot

  rest-api:
    image: "api"
    container_name: "sixpibrobot-api"
    stop_signal: SIGINT
    build:
      context: .
      dockerfile: ./infrastructure/api/Dockerfile

    working_dir: "/usr/src/app/api"
    volumes:
      - .:/usr/src/app/api
    command: [ "uvicorn", "infrastructure.api.app:app", "--host", "0.0.0.0", "--port", "8000" ]
    restart: always
    env_file:
      - ".env"
    ports:
      - "8095:8000"
    networks:
      - tg_bot
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  pg_database:
    image: postgres:13-alpine
    expose:
      - "5423"
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: -p 5423
    env_file:
      - '.env'
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - tg_bot

networks:
  tg_bot:
    driver: bridge

volumes:
  cache:
  pgdata: