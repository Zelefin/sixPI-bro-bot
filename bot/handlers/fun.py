import random
import re
from random import randint

from aiogram import Router, flags, types
from aiogram.filters import Command, CommandObject

from bot.misc.parse_numbers import generate_num

fun_router = Router()


def determine_gender(name):
    # Lists of explicit names
    woman_names = ["–ù–∞—Å—Ç–µ–Ω—å–∫–∞"]

    # Women name endings
    women_name_endings = "|".join(
        [
            "sa",
            "—Å–∞",
            "ta",
            "—Ç–∞",
            "—à–∞",
            "sha",
            "–Ω–∞",
            "na",
            "–∏—è",
            "ia",  # existing
            "va",
            "–≤–∞",
            "ya",
            "—è",
            "ina",
            "–∏–Ω–∞",
            "ka",
            "–∫–∞",
            "la",
            "–ª–∞",  # Slavic languages
            "ra",
            "—Ä–∞",
            "sia",
            "—Å–∏—è",
            "ga",
            "–≥–∞",
            "da",
            "–¥–∞",
            "nia",
            "–Ω–∏—è",
            # Slavic languages
            "lie",
            "ly",
            "lee",
            "ley",
            "la",
            "le",
            "ette",
            "elle",
            "anne",  # English language
        ]
    )

    # Check explicit list and name suffixes
    if name in woman_names or re.search(
        f"\w*({women_name_endings})(\W|$)", name, re.IGNORECASE
    ):
        return "woman"
    else:
        return "man"


def select_emoji(length, is_biba):
    # Emojis for bibas, from smallest to largest
    biba_emojis = ["ü•í", "üçå", "üåΩ", "ü•ñ", "üåµ", "üå¥"]

    # Emojis for breasts, from smallest to largest
    breast_emojis = ["üçì", "üçä", "üçé", "ü•≠", "üçâ", "üéÉ"]

    # Select the appropriate list of emojis
    emojis = biba_emojis if is_biba else breast_emojis

    # Select an emoji based on length
    for size, emoji in zip((1, 5, 10, 15, 20, 25), emojis):
        if length <= size:
            return emoji

    # If none of the sizes matched, return the largest emoji
    return emojis[-1]


# Implementing rate limits
@fun_router.message(Command("gay", prefix="!/"))
@flags.rate_limit(limit=120, key="gay")
async def gay(message: types.Message, command: CommandObject):
    """Handler for the /gay command.
    In a humorous and respectful manner, the bot sends a random percentage
    reflecting a playful take on the user's alignment with a random LGBTQ+ orientation.

    Examples:
        /gay
        /gay Sam
    """
    # Reference the original message's author if it's a reply; otherwise, the command user.

    target = (
        command.args
        if command.args
        else (
            message.reply_to_message.from_user.mention_html()
            if message.reply_to_message
            else message.from_user.mention_html()
        )
    )

    percentage = randint(0, 100)

    if percentage > 30:
        phrases = [
            "üåà {username}, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —Ç–∞–∫–∏–π –≥–µ–π, —â–æ –Ω–∞–≤—ñ—Ç—å —î–¥–∏–Ω–æ—Ä–æ–≥–∏ –∑–∞–∑–¥—Ä—è—Ç—å —Ç–≤–æ—ó–π –≤–µ—Å–µ–ª–∫–æ–≤–æ—Å—Ç—ñ!",
            "üåà –£–≤–∞–≥–∞, —É–≤–∞–≥–∞! {username} –æ—Ñ—ñ—Ü—ñ–π–Ω–æ –æ—Ç—Ä–∏–º—É—î –Ω–∞–≥–æ—Ä–æ–¥—É '–ù–∞–π–±—ñ–ª—å—à –û—á–µ–≤–∏–¥–Ω–∏–π –ì–µ–π –†–æ–∫—É'! üèÜ",
            "üåà {username}, —Ç–≤–æ—è –±—ñ-—Å–µ–∫—Å—É–∞–ª—å–Ω—ñ—Å—Ç—å —Ç–∞–∫–∞ –ø–æ—Ç—É–∂–Ω–∞, —â–æ —Ç–∏ –º–æ–∂–µ—à –∑–≤–∞–±–∏—Ç–∏ —ñ —Ö–ª–æ–ø—Ü—ñ–≤, —ñ –¥—ñ–≤—á–∞—Ç –æ–¥–Ω–æ—á–∞—Å–Ω–æ!",
            "üåà –¢—Ä–∞–Ω—Å–≥–µ–Ω–¥–µ—Ä–Ω—ñ—Å—Ç—å {username} —Å—å–æ–≥–æ–¥–Ω—ñ –Ω–∞ —Ç–∞–∫–æ–º—É —Ä—ñ–≤–Ω—ñ, —â–æ –Ω–∞–≤—ñ—Ç—å –≥–µ–Ω–¥–µ—Ä–Ω—ñ —Å—Ç–µ—Ä–µ–æ—Ç–∏–ø–∏ –ø–ª—É—Ç–∞—é—Ç—å—Å—è!",
            "üåà {username}, —Ç–≤–æ—è –∞—Å–µ–∫—Å—É–∞–ª—å–Ω—ñ—Å—Ç—å —Ç–∞–∫–∞ —Å–∏–ª—å–Ω–∞, —â–æ –Ω–∞–≤—ñ—Ç—å —Å–µ–∫—Å –≤—Ç–æ–º–∏–≤—Å—è –≤—ñ–¥ —Ç–µ–±–µ.",
            "üåà –ö–≤—ñ—Ä-–¥–µ—Ç–µ–∫—Ç–æ—Ä –ø–æ–∫–∞–∑—É—î, —â–æ {username} - —Ü–∞—Ä/—Ü–∞—Ä–∏—Ü—è –õ–ì–ë–¢-–≤–µ—á—ñ—Ä–∫–∏! –ì–æ—Ç—É–π—Ç–µ—Å—å –¥–æ —à–æ—É!",
            "üåà {username}, —Ç–≤–æ—è –ø–∞–Ω—Å–µ–∫—Å—É–∞–ª—å–Ω—ñ—Å—Ç—å —Ç–∞–∫–∞ –≤—Å–µ–æ—Ö–æ–ø–ª—é—é—á–∞, —â–æ –Ω–∞–≤—ñ—Ç—å –∫–∞—Å—Ç—Ä—É–ª—ñ –ø–æ—á—É–≤–∞—é—Ç—å—Å—è –ø—Ä–∏–≤–∞–±–ª–∏–≤–∏–º–∏.",
            "üåà –ù–æ–≤–∏–Ω–∞ –¥–Ω—è: {username} –æ—Ñ—ñ—Ü—ñ–π–Ω–æ –≤–∏–∑–Ω–∞–Ω–∏–π –Ω–∞–π—Ñ–∞–±—É–ª–æ–∑–Ω—ñ—à–∏–º –≥–µ—î–º –≤ —ñ—Å—Ç–æ—Ä—ñ—ó! üåü",
        ]
    else:
        phrases = [
            "üåà {username}, —Ç–≤–æ—è –≥–µ—Ç–µ—Ä–æ—Å–µ–∫—Å—É–∞–ª—å–Ω—ñ—Å—Ç—å —Ç–∞–∫–∞ –±–∞–Ω–∞–ª—å–Ω–∞, —â–æ –Ω–∞–≤—ñ—Ç—å –≤–∞–Ω—ñ–ª—å–Ω–µ –º–æ—Ä–æ–∑–∏–≤–æ –∑–¥–∞—î—Ç—å—Å—è —Ü—ñ–∫–∞–≤—ñ—à–∏–º!",
            "üåà –£–≤–∞–≥–∞, —Å–≤—ñ—Ç! {username} - –Ω–∞–π—Å—Ç—Ä–µ–π—Ç–Ω—ñ—à–∏–π —Å—Ç—Ä–µ–π—Ç –≤ —ñ—Å—Ç–æ—Ä—ñ—ó —Å—Ç—Ä–µ–π—Ç—ñ–≤! –ù–∞–≥–æ—Ä–æ–¥—ñ—Ç—å —Ü—é –ª—é–¥–∏–Ω—É!",
            "üåà {username}, —Ç–≤–æ—è –ª—é–±–æ–≤ –¥–æ –ø—Ä–æ—Ç–∏–ª–µ–∂–Ω–æ—ó —Å—Ç–∞—Ç—ñ —Ç–∞–∫–∞ –ø–µ—Ä–µ–¥–±–∞—á—É–≤–∞–Ω–∞, —â–æ –Ω–∞–≤—ñ—Ç—å —Ä–æ–º–∫–æ–º–∏ –∑–∞–∑–¥—Ä—è—Ç—å.",
            "üåà –ì–µ—Ç–µ—Ä–æ-—Ä–∞–¥–∞—Ä –ø–æ–∫–∞–∑—É—î, —â–æ {username} - —Å—É–ø–µ—Ä–∑—ñ—Ä–∫–∞ —Å–≤—ñ—Ç—É –≥–µ—Ç–µ—Ä–æ—Å–µ–∫—Å—É–∞–ª—ñ–≤! –Ø–∫–∞ –Ω—É–¥—å–≥–∞...",
            "üåà {username}, —Ç–≤–æ—è straight-–µ–Ω–µ—Ä–≥—ñ—è —Ç–∞–∫–∞ –ø–æ—Ç—É–∂–Ω–∞, —â–æ –≤–µ—Å–µ–ª–∫–∞ –≤—Ç–µ–∫–ª–∞ –≤—ñ–¥ —Ç–µ–±–µ –∑—ñ —Å—Ç—Ä–∞—Ö—É.",
            "üåà –ù–æ–≤–∏–Ω–∞ –¥–Ω—è: {username} –≤–∏–∑–Ω–∞–Ω–∏–π –Ω–∞–π–±—ñ–ª—å—à –±–∞–∑–æ–≤–∏–º –≥–µ—Ç–µ—Ä–æ—Å–µ–∫—Å—É–∞–ª–æ–º —Ä–æ–∫—É! –í—ñ—Ç–∞—î–º–æ?",
            "üåà {username}, —Ç–≤–æ—è –≥–µ—Ç–µ—Ä–æ—Å–µ–∫—Å—É–∞–ª—å–Ω—ñ—Å—Ç—å —Ç–∞–∫–∞ –Ω–µ—Ü—ñ–∫–∞–≤–∞, —â–æ –Ω–∞–≤—ñ—Ç—å —Ç–≤–æ—ó –≥–µ–Ω–∏ –ø–æ–∑—ñ—Ö–∞—é—Ç—å.",
            "üåà –ê–ª–ª–æ, –ø–æ–ª—ñ—Ü—ñ—è —Å—Ç–µ—Ä–µ–æ—Ç–∏–ø—ñ–≤? –¢–∞–∫, —è —Ö–æ—á—É –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏, —â–æ {username} - –∑–∞–Ω–∞–¥—Ç–æ —Ç–∏–ø–æ–≤–∏–π –≥–µ—Ç–µ—Ä–æ!",
        ]
    # Send the result with a random orientation
    await message.reply(random.choice(phrases).format(username=target))


@fun_router.message(Command("biba", prefix="!/"))
@flags.rate_limit(limit=60, key="fun")
async def biba(message: types.Message):
    """–•–µ–Ω–¥–ª–µ—Ä, –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /biba –∏–ª–∏ !biba

    –í –æ—Ç–≤–µ—Ç, –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä –±–∏–±—ã

    –ü—Ä–∏–º–µ—Ä—ã:
        /biba
        /biba 10
        /biba 1-10
        /biba 10-1
        !biba
        !biba 10
        !biba 1-10
        !biba 10-1
    """
    # —Ä–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
    command_parse = re.compile(r"(!biba|/biba) ?(-?\d*)?-?(\d+)?")
    parsed = command_parse.match(message.text)
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –±–∏–±—ã –æ—Ç 1 –¥–æ 30 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã)
    length = generate_num(parsed.group(2), parsed.group(3), 1, 30)

    # –µ—Å–ª–∏ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –±—É–¥–µ–º –º–µ—Ä—è—Ç—å –±–∏–±—É –∞–≤—Ç–æ—Ä–∞ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    # –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –±–∏–±—É —Ç–æ–≥–æ, –∫—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É
    if message.reply_to_message:
        target = message.reply_to_message.from_user.mention_html()
    else:
        target = message.from_user.mention_html()

    gender = determine_gender(message.from_user.first_name)

    # Random chance to switch gender
    switch_chance = 20
    if random.randint(1, 100) <= switch_chance:
        gender = "man" if gender == "woman" else "woman"

    # Select an emoji for the biba or breast
    is_biba = gender == "man"
    emoji = select_emoji(length, is_biba)

    # Send message based on final gender
    if gender == "woman":
        await message.reply(f"{emoji} –£ {target} –≥—Ä—É–¥–∏ {length // 5} —Ä–æ–∑–º—ñ—Ä—É.")
    else:
        # replace with your message for men
        await message.reply(f"{emoji} –£ {target} –±—ñ–±–∞ {length} —Å–º")


@fun_router.message(Command("nation", prefix="!/"))
@flags.rate_limit(limit=120, key="nationality")
async def nationality(message: types.Message):
    """Handler for the /nation command.
    The bot determines the user's nationality randomly and makes a sarcastic joke about it.
    """
    nationalities = {
        "—ñ–Ω–¥—ñ—î—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —ñ–Ω–¥—ñ—î—Ü—å? –ú–∞–±—É—Ç—å, –∑–±–∏—Ä–∞—î—à—Å—è –º–µ–¥–∏—Ç—É–≤–∞—Ç–∏ –≤ –ø–æ–∑—ñ –ª–æ—Ç–æ—Å–∞ —ñ —Å–ø—ñ–≤–∞—Ç–∏ –º–∞–Ω—Ç—Ä–∏."
                   " –ù–µ –∑–∞–±—É–¥—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç–∏ –∑ –∫–æ—Ä–æ–≤–∞–º–∏ –Ω–∞ –≤—É–ª–∏—Ü—ñ —ñ –∑–∞–ø–∏—Ç–∞—Ç–∏ –≤ –Ω–∏—Ö –ø–æ—Ä–∞–¥–∏.",
        "–Ω—ñ–≥–µ—Ä—ñ—î—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –Ω—ñ–≥–µ—Ä—ñ—î—Ü—å? –ú–∞–±—É—Ç—å, –ø–ª–∞–Ω—É—î—à —Ä–æ–∑—Å–∏–ª–∞—Ç–∏ —Å–ø–∞–º-–ª–∏—Å—Ç–∏ –ø—Ä–æ –º—ñ–ª—å–π–æ–Ω–∏ –¥–æ–ª–∞—Ä—ñ–≤,"
                     " —è–∫—ñ —Ç–æ–±—ñ –∑–∞–ª–∏—à–∏–≤ —É —Å–ø–∞–¥–æ–∫ —è–∫–∏–π—Å—å –ø—Ä–∏–Ω—Ü."
                     " –ù–µ –∑–∞–±—É–¥—å –≤–¥—è–≥–Ω—É—Ç–∏ –±–∞—Ä–≤–∏—Å—Ç—É —Å–æ—Ä–æ—á–∫—É —ñ —Ç–∞–Ω—Ü—é–≤–∞—Ç–∏ –ø—ñ–¥ —Ä–∏—Ç–º–∏ –∞—Ñ—Ä–æ–±—ñ—Ç—É.",
        "–±—Ä–∞–∑–∏–ª–µ—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –±—Ä–∞–∑–∏–ª–µ—Ü—å? –ú–∞–±—É—Ç—å, –∑–±–∏—Ä–∞—î—à—Å—è –Ω–∞ –∫–∞—Ä–Ω–∞–≤–∞–ª –≤ –†—ñ–æ."
                     " –ù–µ –∑–∞–±—É–¥—å –æ–¥—è–≥–Ω—É—Ç–∏ —è—Å–∫—Ä–∞–≤—ñ –ø—ñ—Ä'—è, –±–ª–∏—Å–∫—ñ—Ç–∫–∏ —ñ —Ç–∞–Ω—Ü—é–≤–∞—Ç–∏ —Å–∞–º–±—É –¥–æ —Ä–∞–Ω–∫—É.",
        "—î–≥–∏–ø—Ç—è–Ω–∏–Ω": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —î–≥–∏–ø—Ç—è–Ω–∏–Ω?"
                     " –ú–∞–±—É—Ç—å, –ø–ª–∞–Ω—É—î—à —Ä–æ–∑–≥–∞–¥—É–≤–∞—Ç–∏ —Ç–∞—î–º–Ω–∏—Ü—ñ –ø—ñ—Ä–∞–º—ñ–¥ —ñ —à—É–∫–∞—Ç–∏ —Å–∫–∞—Ä–±–∏ —Ñ–∞—Ä–∞–æ–Ω—ñ–≤."
                     " –ù–µ –∑–∞–±—É–¥—å –ø–æ–∫–∞—Ç–∞—Ç–∏—Å—å –Ω–∞ –≤–µ—Ä–±–ª—é–¥—ñ —ñ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–≤–∞—Ç–∏—Å—å –∑—ñ —Å—Ñ—ñ–Ω–∫—Å–æ–º.",
        "–∞—Ä–≥–µ–Ω—Ç–∏–Ω–µ—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –∞—Ä–≥–µ–Ω—Ç–∏–Ω–µ—Ü—å?"
                       " –ú–∞–±—É—Ç—å, –∑–±–∏—Ä–∞—î—à—Å—è –Ω–∞ —Ñ—É—Ç–±–æ–ª—å–Ω–∏–π –º–∞—Ç—á —ñ –∫—Ä–∏—á–∞—Ç–∏ 'Vamos Argentina!'."
                       " –ù–µ –∑–∞–±—É–¥—å –ø–æ—Å–∫–∞—Ä–∂–∏—Ç–∏—Å—å –Ω–∞ —É—Ä—è–¥ —ñ –µ–∫–æ–Ω–æ–º—ñ–∫—É, —è–∫ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –∞—Ä–≥–µ–Ω—Ç–∏–Ω–µ—Ü—å.",
        "—à–≤–µ–¥": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —à–≤–µ–¥? –ú–∞–±—É—Ç—å, –ø–ª–∞–Ω—É—î—à –Ω–∞—Å–æ–ª–æ–¥–∂—É–≤–∞—Ç–∏—Å—å –ª–∞–≥–æ–º–æ–º —ñ –≥—ñ–≥–≥–µ."
                " –ù–µ –∑–∞–±—É–¥—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ –ø–µ—Ä–µ–≤–∞–≥–∏ —Å–æ—Ü—ñ–∞–ª—ñ–∑–º—É —ñ –ø–æ—Ö–≤–∞–ª–∏—Ç–∏—Å—å —Å–≤–æ—î—é –ª—é–±–æ–≤'—é –¥–æ –ø—Ä–∏—Ä–æ–¥–∏.",
        "—É–∫—Ä–∞—ó–Ω–µ—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —É–∫—Ä–∞—ó–Ω–µ—Ü—å? –ú–∞–±—É—Ç—å, –ø–ª–∞–Ω—É—î—à –≤–∏–ø–∏—Ç–∏ –≥–æ—Ä—ñ–ª–∫–∏ —ñ –∑'—ó—Å—Ç–∏ —Å–∞–ª–æ."
                     " –ù–µ –∑–∞–±—É–¥—å –ø–æ—Å–∫–∞—Ä–∂–∏—Ç–∏—Å—å –Ω–∞ —É—Ä—è–¥ —ñ –∑–≥–∞–¥–∞—Ç–∏ –ø—Ä–æ –≤–µ–ª–∏–∫–µ –∫–æ–∑–∞—Ü—Ç–≤–æ.",
        "–∞–º–µ—Ä–∏–∫–∞–Ω–µ—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –∞–º–µ—Ä–∏–∫–∞–Ω–µ—Ü—å? –ú–∞–±—É—Ç—å, –≥–∞–º–±—É—Ä–≥–µ—Ä—ñ–≤ —ñ –∫–æ–ª—É —Ö–æ—á–µ—à."
                       " –ù–µ –∑–∞–±—É–¥—å –ø—Ä–∏—Ö–æ–ø–∏—Ç–∏ —Å–≤—ñ–π —É–ª—é–±–ª–µ–Ω–∏–π –±–µ–π—Å–±–æ–ª—å–Ω–∏–π –∫–∞—à–∫–µ—Ç —ñ –∑–±—Ä–æ—é, –±–µ–∑ –Ω–∏—Ö –Ω—ñ–∫—É–¥–∏.",
        "—Ñ—Ä–∞–Ω—Ü—É–∑": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —Ñ—Ä–∞–Ω—Ü—É–∑? –ú–∞–±—É—Ç—å, –∫—Ä—É–∞—Å–∞–Ω—ñ–≤ —ñ –≤–∏–Ω–∞ —Ö–æ—á–µ—à."
                   " –ù–µ –∑–∞–±—É–¥—å –ø–æ—Å–∫–∞—Ä–∂–∏—Ç–∏—Å—å –Ω–∞ –≤—Å–µ –ø—ñ–¥—Ä—è–¥ —ñ –ø–æ–≤–æ–¥–∏—Ç–∏—Å—å –∑–≤–µ—Ä—Ö–Ω—å–æ, —è–∫ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —Ñ—Ä–∞–Ω—Ü—É–∑.",
        "–Ω—ñ–º–µ—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –Ω—ñ–º–µ—Ü—å?"
                  " –ú–∞–±—É—Ç—å, –ø–∏–≤–∞ —ñ –∫–æ–≤–±–∞—Å–æ–∫ —Ö–æ—á–µ—à. –ù–µ –∑–∞–±—É–¥—å –±—É—Ç–∏ –ø—É–Ω–∫—Ç—É–∞–ª—å–Ω–∏–º —ñ –¥–æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏—Å—å –ø—Ä–∞–≤–∏–ª,"
                  " –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –≤–æ–Ω–∏ –±–µ–∑–≥–ª—É–∑–¥—ñ.",
        "—ñ—Ç–∞–ª—ñ—î—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ —ñ—Ç–∞–ª—ñ—î—Ü—å? –ú–∞–±—É—Ç—å, –ø–∞—Å—Ç–∏ —ñ –ø—ñ—Ü–∏ —Ö–æ—á–µ—à."
                    " –ù–µ –∑–∞–±—É–¥—å –≥–æ–≤–æ—Ä–∏—Ç–∏ –≥–æ–ª–æ—Å–Ω–æ, —Ä–æ–∑–º–∞—Ö—É–≤–∞—Ç–∏ —Ä—É–∫–∞–º–∏ —ñ —Ü—ñ–ª—É–≤–∞—Ç–∏ –≤—Å—ñ—Ö –≤ —â–æ–∫–∏.",
        "–∫–∏—Ç–∞—î—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –∫–∏—Ç–∞—î—Ü—å? –ú–∞–±—É—Ç—å, —Ä–∏—Å—É —ñ –¥–∏–º—Å–∞–º—ñ–≤ —Ö–æ—á–µ—à."
                   " –ù–µ –∑–∞–±—É–¥—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø–æ 12 –≥–æ–¥–∏–Ω –Ω–∞ –¥–µ–Ω—å —ñ –∫–ª–∞–Ω—è—Ç–∏—Å—å —Å–≤–æ—î–º—É –±–æ—Å—Å—É.",
        "–º–µ–∫—Å–∏–∫–∞–Ω–µ—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –º–µ–∫—Å–∏–∫–∞–Ω–µ—Ü—å? –ú–∞–±—É—Ç—å, —Ç–∞–∫–æ—Å —ñ —Ç–µ–∫—ñ–ª—É —Ö–æ—á–µ—à."
                       " –ù–µ –∑–∞–±—É–¥—å –æ–¥—è–≥–Ω—É—Ç–∏ —Å–æ–º–±—Ä–µ—Ä–æ —ñ —Å—Ç–∞–Ω—Ü—é–≤–∞—Ç–∏ —Å–∞–ª—å—Å—É, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –Ω–µ –≤–º—ñ—î—à.",
        "–∞–≤—Å—Ç—Ä–∞–ª—ñ—î—Ü—å": "–¢–æ —â–æ, —Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ –∞–≤—Å—Ç—Ä–∞–ª—ñ—î—Ü—å? –ú–∞–±—É—Ç—å, —à–∞—à–ª–∏–∫—ñ–≤ —ñ –ø–∏–≤–∞ —Ö–æ—á–µ—à."
                       " –ù–µ –∑–∞–±—É–¥—å –ø–æ–≥–ª–∞–¥–∏—Ç–∏ –∫–æ–∞–ª—É —ñ —Å–∫–∞–∑–∞—Ç–∏ 'g'day mate' –∫–æ–∂–Ω–æ–º—É –∑—É—Å—Ç—Ä—ñ—á–Ω–æ–º—É.",
    }

    # Randomly select a nationality
    random_nationality = random.choice(list(nationalities.keys()))

    # Get the corresponding joke for the selected nationality
    joke = nationalities[random_nationality]

    target = (
        message.reply_to_message.from_user.mention_html()
        if message.reply_to_message
        else message.from_user.mention_html()
    )

    # Send the joke
    await message.reply(f"{target}, {joke}")
